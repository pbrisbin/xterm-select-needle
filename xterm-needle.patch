diff -u xterm-327/button.c ../xterm/button.c
--- xterm-327/button.c	2016-05-30 15:42:44.000000000 -0400
+++ ../xterm/button.c	2017-01-18 20:12:57.797136600 -0500
@@ -2408,6 +2408,76 @@
     }
 }
 
+/* ARGSUSED */
+void
+HandleSelectNeedle(Widget w,
+		   XEvent *event GCC_UNUSED,
+		   String *params,
+		   Cardinal *num_params)
+{
+    XtermWidget xw;
+    String needle;
+    size_t len;
+
+    if (!num_params || *num_params < 1) {
+      return;
+    }
+
+    needle = params[0];
+    len = strlen(needle);
+
+    if ((xw = getXtermWidget(w)) != 0) {
+        TScreen *screen = TScreenOf(xw);
+        CELL cell = screen->cursorp;
+        LineData *ld;
+
+#if OPT_FOCUS_EVENT
+        // Fake a focus event to work around some window managers
+        XFocusChangeEvent *focus_event = (XFocusChangeEvent *) event;
+        focus_event->type = FocusIn;
+#endif
+
+        if (!isSameCELL(&screen->startH, &screen->endH)) {
+          TRACE(("SelectNeedle: starting at current highlight\n"));
+          /* Something's highlighted, start a row above */
+          cell.row = screen->startH.row - 1;
+          cell.col = screen->max_col;
+        } else {
+          /* Search the whole screen */
+          cell.row = screen->max_row;
+          cell.col = screen->max_col;
+        }
+
+        for (; cell.row >= 0; cell.row--) {
+          TRACE(("SelectNeedle: row %d\n", cell.row));
+          ld = getLineData(screen, cell.row);
+
+          for (cell.col = screen->max_col - len; cell.col >= 0; cell.col--) {
+            size_t i;
+            TRACE(("SelectNeedle: coll %d\n", cell.col));
+
+            for (i = 0; i < len; i++) {
+              if (ld->charData[cell.col + i] != (unsigned)needle[i]) {
+                break;
+              }
+            }
+
+            if (i == len) { /* needle found */
+#if OPT_FOCUS_EVENT
+              SendFocusButton(xw, focus_event);
+#endif
+              TRACE(("SelectNeedle: found (%d,%d)\n", cell.row, cell.col));
+              screen->selectUnit = Select_WORD;
+              ComputeSelect(xw, &cell, &cell, False);
+              return;
+            }
+          }
+        }
+
+        DisownSelection(xw);
+    }
+}
+
 static void
 TrackDown(XtermWidget xw, XButtonEvent *event)
 {
diff -u xterm-327/charproc.c ../xterm/charproc.c
--- xterm-327/charproc.c	2016-10-07 17:14:54.000000000 -0400
+++ ../xterm/charproc.c	2016-12-21 19:20:54.401039394 -0500
@@ -266,6 +266,7 @@
     { "select-cursor-start",	HandleKeyboardSelectStart },
     { "select-end",		HandleSelectEnd },
     { "select-extend",		HandleSelectExtend },
+    { "select-needle",		HandleSelectNeedle },
     { "select-set",		HandleSelectSet },
     { "select-start",		HandleSelectStart },
     { "send-signal",		HandleSendSignal },
diff -u xterm-327/xterm.h ../xterm/xterm.h
--- xterm-327/xterm.h	2016-05-29 14:34:09.000000000 -0400
+++ ../xterm/xterm.h	2016-12-21 19:05:40.461013439 -0500
@@ -823,6 +823,7 @@
 extern void HandleKeyboardStartExtend  PROTO_XT_ACTIONS_ARGS;
 extern void HandleSelectEnd            PROTO_XT_ACTIONS_ARGS;
 extern void HandleSelectExtend         PROTO_XT_ACTIONS_ARGS;
+extern void HandleSelectNeedle         PROTO_XT_ACTIONS_ARGS;
 extern void HandleSelectSet            PROTO_XT_ACTIONS_ARGS;
 extern void HandleSelectStart          PROTO_XT_ACTIONS_ARGS;
 extern void HandleStartExtend          PROTO_XT_ACTIONS_ARGS;
